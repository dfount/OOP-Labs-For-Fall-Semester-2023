Hi,

Please find below Programe

// CSCE 1337            Damian Fuentes, Jose        
//                                                                                                           
//                      Programming Assignment 3                              
//                                                                                                                          
//                     Date submitted:  10/29/2023    

#ifndef STUDENT_H_ 
#define STUDENT_H_ #include <iostream> 
#include <string>  
using namespace std;  
class Student {
   private:
   int id;
   string name;   
   string address;   
   string telephone;   
   int quiz_scores[3];   
   public:   
   Student(int id, string name, string address, string telephone, int scores[]); 
   int getId();   
   string getName();   
   void setAddreess(string address_);   string getAddress();
   void setTelephone(string telephone_);   string getTelePhone();   
   int getQuizScore(int index);   void setQuizScore(int index , int score);  
   void printDetails();   
   float getAverage();  
   string findGrade(float average);  
   void updateStudentAddress();   
   void updateStudentTelephone(); 
   void updateQuizScore();    virtual ~Student(); };  #endif 
 


// CSCE 1337            Damian Fuentes, Jose        
//                                                                                                           
//                      Programming Assignment 3                              
//                                                                                                                          
//                     Date submitted:  10/29/2023    

#include "Student.h" 
#include <string> 

Student::Student(int id, string name, string address, string telephone, int scores[]) {
   this->id = id;   
   this->name = name;   
   this->address = address;   
   this->telephone = telephone;  
   for (int i = 0; i < 4; i++) {     this->quiz_scores[i] = scores[i];   } 
} 

int Student::getId() { return this->id; 
}

string Student::getName() { return this->name; 
} 

void Student::setAddreess(string address_) {  
address_.copy(const_cast<char *>(this->address.c_str()), address_.length()); 
} 

string Student::getAddress() {
   return this->address; 
} 

void Student::setTelephone(string telephone_) {
   telephone_.copy(const_cast<char *>(this->telephone.c_str()),telephone_.length()); 
   } 
   string Student::getTelePhone() { return this->telephone; 
   }

int Student::getQuizScore(int index) { return this->quiz_scores[index - 1]; 
}  

void Student::setQuizScore(int index, int score) {   
   this->quiz_scores[index - 1] = score;
}

void Student::printDetails() {   
   cout << "Student Name: " << this->name << endl;   
   cout << "Student Id: " << this->id << endl;   
   cout << "Student Address : " << this->address << endl;   
   cout << "Student Telephone number : " << this->telephone << endl;
   cout << "Quiz Grades: ";   
   for (int i = 0; i < 3; i++) 
   cout << this->quiz_scores[i] << " ";   
   cout << endl;
   cout << "The student's quiz average is  :" << this->getAverage() << endl;
   cout << "The student's letter grade is  :" << this->findGrade(this->getAverage()); 
}

float Student::getAverage() {
   float avg = 0;   
   for (int i = 0; i < 3; i++) {
      avg += this->quiz_scores[i];   
      }
      return (avg / 3);
      }
      
   string Student::findGrade(float average) {   
      string grade = "";
      if (average >= 90) {
         grade = "A+";
         }
      else if (average >= 85) {
         grade = "A";
         }
      else if (average >= 80) {
         grade = "B+";
         } 
      else if (average >= 75) {     
         grade = "B";   
         } 
      else if (average >= 65) {
         grade = "C+";
         }
      else if (average >= 60) {
         grade = "C";
         }
      else if (average >= 55) {
         grade = "D+";
         }
      else if (average >= 50) {
         grade = "D";
         }
      else{
         grade = "F";
         }
         return grade;
         }
 
void Student::updateStudentAddress() {   
   cout<<"Enter New address"<<endl;  
   cin >> this->address;
}
 
void Student::updateStudentTelephone() {  
   cout<<"Enter New Telephone"<<endl;   
   cin >> this->telephone;
} 
 
void Student::updateQuizScore() {  
   int idx = 0;
   cout<<"Enter which quiz score to update"<<endl;  
   cin>>idx;  
   cout<<"Enter New Quiz score"<<endl;  
   cin >> this->quiz_scores[idx-1]; 
   Student::~Student() {}   
 
 


 // CSCE 1337            Damian Fuentes, Jose        
//                                                                                                           
//                      Programming Assignment 3                              
//                                                                                                                          
//                     Date submitted:  10/29/2023    

#include <iostream> 
#include<stdio.h>
#include "Student.h" 
using namespace std;  

int student_id[] = {970875, 970876, 970877, 970878};
Student *s1, *s2, *s3, *s4 = nullptr;  
int main(){   
   string name, address, telephone;   
   int id;   
   int scores[4]; 
   for (int i = 0; i < 4; i++){     
      Student *s = nullptr;      
      id = student_id[i];     
      cout << "enter name for Student" << (i + 1) << endl;    
      cin >> name;    
      cout << "enter address for Student" << (i + 1) << endl;    
      cin >> address;     
      cout << "enter telephone for Student" << (i + 1) << endl;   
      cin >> telephone;      // get 4 quiz scores     
      for (int j = 0; j < 3; j++) {       
         cout << "enter score for quiz" << (j + 1) << " for Student" << (i + 1) << endl;  
         cin >> scores[j];     
         }      
         if (i == 0)      
         s1 = new Student(id, name, address, telephone, scores); 
         else if (i == 1)       
         s2 = new Student(id, name, address, telephone, scores); 
         else if (i == 2)      
         s3 = new Student(id, name, address, telephone, scores);  
         else if (i == 3)     
         s4 = new Student(id, name, address, telephone, scores);  
         }   
         getchar();
         while (true) { 
            int option = -1;  
            cout << "Enter Option" << endl; 
            cout << "1.Display Details\n" << "2.Update Address\n" << "3.Update Telephone\n 4.Update Quiz score\n 5. Quit" << endl;    
            cin >> option;
            if (option == 5) break;
            switch (option) {   
               case 1: {    
                  int id = 0;     
                  cout << "Enter Student ID for which need to print details" << endl;   
                  cin >> id;       
                  Student *s = nullptr;         // get Student object based on ID   
                  if (s1->getId() == id) s = s1;     
                  if (s2->getId() == id) s = s2;     
                  if (s3->getId() == id) s = s3;     
                  if (s4->getId() == id) s = s4;     
                  s->printDetails();    
                  } 
                  break;      
               case 2: {     
                  int id = 0;  
                  string address_; 
                  cout << "Enter Student ID for which need to update address" << endl;  
                  cin >> id;    
                  Student *s = nullptr;        
                  if (s1->getId() == id) s = s1;     
                  if (s2->getId() == id) s = s2;     
                  if (s3->getId() == id) s = s3;      
                  if (s4->getId() == id) s = s4;  
                  s->updateStudentAddress();      
                  } break;     
               case 3: {      
                  int id = 0;        
                  string address_;        
                  cout << "Enter Student ID for which need to update address" << endl;    
                  cin >> id;         
                  Student *s = nullptr;          
                  if (s1->getId() == id) s = s1;     
                  if (s2->getId() == id) s = s2;      
                  if (s3->getId() == id) s = s3;       
                  if (s4->getId() == id) s = s4;         
                  s->updateStudentTelephone();     
                  } break;       
               case 4: {    
                  int id = 0;       
                  string address_;      
                  cout << "Enter Student ID for which need to update quiz score" << endl;     
                  cin >> id;    
                  Student *s = nullptr;      
                  if (s1->getId() == id) s = s1;     
                  if (s2->getId() == id) s = s2;
                  if (s3->getId() == id) s = s3;
                  if (s4->getId() == id) s = s4;
                  s->updateQuizScore();
                  } break;     
         default:
         break;
         }
         getchar();
         }
         return 0; 
      } 
 